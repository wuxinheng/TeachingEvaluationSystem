@page "/userclasspage/edit/{id?}"
@using TeachingEvaluationSystem.Data;
@using Microsoft.AspNetCore.Components.Forms

@inject UserClassesService UserClassesService
@inject NavigationManager NavigationManager
@inject IJSRuntime JS

<div class="mb-3">
    <label for="exampleInputEmail1" class="form-label">用户名</label>
    <input type="text" class="form-control" id="exampleInputEmail1" aria-describedby="emailHelp" @bind="@UserClasses.User.Name" readonly>
</div>
<div class="mb-3">
    <label for="exampleInputEmail1" class="form-label">班级</label>
    <input type="text" class="form-control" id="exampleInputEmail1" aria-describedby="emailHelp" @bind="@UserClasses.Classes.Name" readonly>
</div>


<button class="btn btn-primary" @onclick="Save">保存</button>

@code {

    [Parameter]
    public string? Id { get; set; }

    public string? ConfirmPassword { get; set; }

    public Edit()
    {
        UserClasses = new DB.Entitys.UserClass();
    }
    public TeachingEvaluationSystem.DB.Entitys.UserClass? UserClasses { get; set; }

    public async Task Save()
    {

        var isSuccess = await UserClassesService.Save(UserClasses);
        if (isSuccess)
        {
            await JS.InvokeVoidAsync("alert", "保存成功！");
            NavigationManager.NavigateTo("/subjectpage/index", false);
        }
        else
        {
            await JS.InvokeVoidAsync("alert", "保存失败！");
        }


    }

    protected override async Task OnInitializedAsync()
    {
        var id = string.IsNullOrWhiteSpace(Id) ? 0 : int.Parse(Id);
        UserClasses = await UserClassesService.Get(id);
        if (UserClasses == null)
        {
            UserClasses = new DB.Entitys.UserClass();
        }

    }
}
