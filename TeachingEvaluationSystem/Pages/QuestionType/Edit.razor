@page "/questiontype/edit/{id?}"
@using TeachingEvaluationSystem.Data;
@using Microsoft.AspNetCore.Components.Forms

@inject QuestionTypeService QuestionTypeService
@inject NavigationManager NavigationManager
@inject IJSRuntime JS

<div class="mb-3">
    <label for="exampleInputEmail1" class="form-label">名称</label>
    <input type="text" class="form-control" id="exampleInputEmail1" aria-describedby="emailHelp" @bind="@QuestionType.Name">
</div>

<div class="mb-3">
    <label for="questiontypeweight" class="form-label">权重</label>
    <select id="questiontypeweight" class="form-select" aria-label="Default select example" required @bind="@QuestionType.Weight">
        <option value="0">0.0</option>
        <option value="0.1">0.1</option>
        <option value="0.2">0.2</option>
        <option value="0.3">0.3</option>
        <option value="0.4">0.4</option>
        <option value="0.5">0.5</option>
        <option value="0.6">0.6</option>
        <option value="0.7">0.7</option>
        <option value="0.8">0.8</option>
        <option value="0.9">0.9</option>
        <option value="1">1.0</option>
    </select>
</div>
<button class="btn btn-primary" @onclick="Save">保存</button>

@code {

    [Parameter]
    public string? Id { get; set; }
    public Edit()
    {
        QuestionType = new DB.Entitys.QuestionType();
    }
    public TeachingEvaluationSystem.DB.Entitys.QuestionType? QuestionType { get; set; }

    public async Task Save()
    {
        var isSuccess = await QuestionTypeService.Save(QuestionType);
        if (isSuccess)
        {
            await JS.InvokeVoidAsync("alert", "保存成功！");
            NavigationManager.NavigateTo("/questiontype/index", false);
        }
        else
        {
            await JS.InvokeVoidAsync("alert", "保存失败！");
        }
    }

    protected override async Task OnInitializedAsync()
    {
        var id = string.IsNullOrWhiteSpace(Id) ? 0 : int.Parse(Id);
        QuestionType = await QuestionTypeService.Get(id);
        if (QuestionType == null)
        {
            QuestionType = new DB.Entitys.QuestionType();
        }

    }
}
